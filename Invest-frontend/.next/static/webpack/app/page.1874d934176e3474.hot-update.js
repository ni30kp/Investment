"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./app/components/PerformanceChart.tsx":
/*!*********************************************!*\
  !*** ./app/components/PerformanceChart.tsx ***!
  \*********************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ PerformanceChart; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var chart_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! chart.js */ \"(app-pages-browser)/./node_modules/chart.js/dist/chart.js\");\n/* harmony import */ var react_chartjs_2__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-chartjs-2 */ \"(app-pages-browser)/./node_modules/react-chartjs-2/dist/index.js\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\n\nchart_js__WEBPACK_IMPORTED_MODULE_2__.Chart.register(chart_js__WEBPACK_IMPORTED_MODULE_2__.CategoryScale, chart_js__WEBPACK_IMPORTED_MODULE_2__.LinearScale, chart_js__WEBPACK_IMPORTED_MODULE_2__.PointElement, chart_js__WEBPACK_IMPORTED_MODULE_2__.LineElement, chart_js__WEBPACK_IMPORTED_MODULE_2__.Title, chart_js__WEBPACK_IMPORTED_MODULE_2__.Tooltip, chart_js__WEBPACK_IMPORTED_MODULE_2__.Legend, chart_js__WEBPACK_IMPORTED_MODULE_2__.Filler);\nfunction PerformanceChart() {\n    _s();\n    const [activeTimeframe, setActiveTimeframe] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"1M\");\n    const [chartData, setChartData] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [isLoading, setIsLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [selectedInterval, setSelectedInterval] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"daily\");\n    const [fetchTrigger, setFetchTrigger] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);\n    const [currentValue, setCurrentValue] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(550000);\n    const [changeValue, setChangeValue] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(50000);\n    const [changePercent, setChangePercent] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(10);\n    const apiUrl = \"http://localhost:5001/api\" || 0;\n    const performanceEndpoint = \"\".concat(apiUrl, \"/portfolio/performance\");\n    // Format currency\n    const formatCurrency = (value)=>{\n        return new Intl.NumberFormat(\"en-IN\", {\n            style: \"currency\",\n            currency: \"INR\",\n            maximumFractionDigits: 0\n        }).format(value).replace(\"₹\", \"₹\");\n    };\n    // Direct fetch function for debugging\n    const fetchPerformanceData = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(async ()=>{\n        console.log(\"[PerformanceChart.tsx] Fetching data for timeframe=\".concat(activeTimeframe, \", interval=\").concat(selectedInterval));\n        setIsLoading(true);\n        setError(null);\n        try {\n            const url = \"\".concat(performanceEndpoint, \"?period=\").concat(activeTimeframe, \"&interval=\").concat(selectedInterval);\n            console.log(\"[PerformanceChart.tsx] Fetching from URL: \".concat(url));\n            const response = await fetch(url);\n            if (!response.ok) {\n                throw new Error(\"API error: \".concat(response.status));\n            }\n            const data = await response.json();\n            console.log(\"[PerformanceChart.tsx] Received data:\", data);\n            if (!data || !data.data || data.data.length === 0) {\n                console.warn(\"[PerformanceChart.tsx] No data available for the selected period\");\n                setError(\"No data available for the selected period\");\n                setChartData(null);\n                return;\n            }\n            // Update current value and change based on the data\n            if (data.data.length > 0) {\n                const lastValue = data.data[data.data.length - 1].value;\n                const firstValue = data.data[0].value;\n                const change = lastValue - firstValue;\n                const changePercentage = change / firstValue * 100;\n                setCurrentValue(lastValue);\n                setChangeValue(change);\n                setChangePercent(parseFloat(changePercentage.toFixed(1)));\n            }\n            // Format the data for the chart\n            const formattedData = {\n                labels: data.data.map((item)=>{\n                    const date = new Date(item.date);\n                    return formatDate(date, activeTimeframe);\n                }),\n                datasets: [\n                    {\n                        data: data.data.map((item)=>item.value),\n                        borderColor: \"#3B82F6\",\n                        backgroundColor: \"rgba(59, 130, 246, 0.1)\",\n                        fill: true,\n                        tension: 0.4,\n                        pointRadius: 0,\n                        pointHoverRadius: 5\n                    }\n                ]\n            };\n            console.log(\"[PerformanceChart.tsx] Setting chart data:\", formattedData);\n            setChartData(formattedData);\n        } catch (err) {\n            console.error(\"[PerformanceChart.tsx] Error fetching performance data:\", err);\n            setError(\"Failed to load performance data: \".concat(err instanceof Error ? err.message : \"Unknown error\"));\n            // Use fallback data if API fails\n            const fallbackData = getFallbackData();\n            setChartData(fallbackData);\n            // Set fallback values\n            setCurrentValue(550000);\n            setChangeValue(50000);\n            setChangePercent(10);\n        } finally{\n            setIsLoading(false);\n        }\n    }, [\n        activeTimeframe,\n        selectedInterval,\n        performanceEndpoint\n    ]);\n    // Format date based on selected range\n    const formatDate = (date, range)=>{\n        if (!date || isNaN(date.getTime())) {\n            console.warn(\"[PerformanceChart.tsx] Invalid date:\", date);\n            return \"Invalid date\";\n        }\n        const day = date.getDate();\n        const month = date.toLocaleString(\"default\", {\n            month: \"short\"\n        });\n        const year = date.getFullYear();\n        if (range === \"1M\" || range === \"3M\") {\n            return \"\".concat(day, \" \").concat(month);\n        } else if (range === \"6M\" || range === \"1Y\") {\n            return \"\".concat(month, \" \").concat(year);\n        } else {\n            return \"\".concat(month, \" \").concat(year);\n        }\n    };\n    // Fallback data in case API fails\n    const getFallbackData = ()=>{\n        const labels = [\n            \"7 Feb\",\n            \"12 Feb\",\n            \"17 Feb\",\n            \"22 Feb\",\n            \"27 Feb\",\n            \"4 Mar\",\n            \"9 Mar\"\n        ];\n        return {\n            labels,\n            datasets: [\n                {\n                    data: [\n                        520000,\n                        510000,\n                        530000,\n                        525000,\n                        540000,\n                        535000,\n                        575000\n                    ],\n                    borderColor: \"#3B82F6\",\n                    backgroundColor: \"rgba(59, 130, 246, 0.1)\",\n                    fill: true,\n                    tension: 0.4,\n                    pointRadius: 0,\n                    pointHoverRadius: 5\n                }\n            ]\n        };\n    };\n    // Effect to fetch data when dependencies change\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        console.log(\"[PerformanceChart.tsx] useEffect triggered: timeframe=\".concat(activeTimeframe, \", interval=\").concat(selectedInterval, \", fetchTrigger=\").concat(fetchTrigger));\n        fetchPerformanceData();\n    }, [\n        fetchPerformanceData,\n        fetchTrigger\n    ]);\n    // Handle timeframe change\n    const handleTimeframeChange = (timeframe)=>{\n        console.log(\"[PerformanceChart.tsx] BUTTON CLICKED: Changing timeframe to \".concat(timeframe));\n        if (timeframe === activeTimeframe) {\n            console.log(\"[PerformanceChart.tsx] Timeframe \".concat(timeframe, \" already selected, forcing refresh\"));\n            // If the same timeframe is clicked again, force a refresh\n            setFetchTrigger((prev)=>prev + 1);\n            return;\n        }\n        // Update the selected timeframe\n        setActiveTimeframe(timeframe);\n        // Adjust interval based on timeframe for better visualization\n        let newInterval;\n        if (timeframe === \"1M\" || timeframe === \"3M\") {\n            newInterval = \"daily\";\n        } else if (timeframe === \"6M\" || timeframe === \"1Y\") {\n            newInterval = \"monthly\";\n        } else {\n            newInterval = \"monthly\";\n        }\n        console.log(\"[PerformanceChart.tsx] Setting interval to \".concat(newInterval, \" based on timeframe \").concat(timeframe));\n        setSelectedInterval(newInterval);\n        // Force a re-fetch by incrementing the trigger\n        setFetchTrigger((prev)=>prev + 1);\n    };\n    const options = {\n        responsive: true,\n        maintainAspectRatio: false,\n        plugins: {\n            legend: {\n                display: false\n            },\n            tooltip: {\n                backgroundColor: \"#1F2937\",\n                titleColor: \"#F9FAFB\",\n                bodyColor: \"#D1D5DB\",\n                borderColor: \"#374151\",\n                borderWidth: 1,\n                padding: 10,\n                displayColors: false,\n                callbacks: {\n                    label: function(context) {\n                        return \"₹\".concat(context.parsed.y.toLocaleString());\n                    }\n                }\n            }\n        },\n        scales: {\n            x: {\n                grid: {\n                    display: false,\n                    drawBorder: false\n                },\n                ticks: {\n                    color: \"#6B7280\",\n                    font: {\n                        size: 10\n                    },\n                    maxRotation: 0\n                }\n            },\n            y: {\n                display: false,\n                grid: {\n                    display: false\n                }\n            }\n        },\n        elements: {\n            line: {\n                tension: 0.4,\n                borderWidth: 2,\n                borderColor: \"#3B82F6\"\n            },\n            point: {\n                radius: 0,\n                hitRadius: 10,\n                hoverRadius: 5,\n                hoverBorderWidth: 2,\n                backgroundColor: \"#3B82F6\",\n                borderColor: \"#1F2937\"\n            }\n        }\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"bg-gray-800 rounded-lg p-4\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"flex justify-between items-center mb-4\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h2\", {\n                            className: \"text-lg font-bold text-white\",\n                            children: \"Performance Summary\"\n                        }, void 0, false, {\n                            fileName: \"/Users/nitish/Desktop/InvestWelth/Invest-frontend/app/components/PerformanceChart.tsx\",\n                            lineNumber: 293,\n                            columnNumber: 21\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"flex items-center mt-2\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"text-2xl font-bold text-white\",\n                                    children: [\n                                        \"₹\",\n                                        formatCurrency(currentValue).replace(\"₹\", \"\")\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"/Users/nitish/Desktop/InvestWelth/Invest-frontend/app/components/PerformanceChart.tsx\",\n                                    lineNumber: 295,\n                                    columnNumber: 25\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"ml-4 flex items-center\",\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                            className: \"mr-1 \".concat(changeValue >= 0 ? \"text-green-500\" : \"text-red-500\"),\n                                            children: [\n                                                changeValue >= 0 ? \"+\" : \"\",\n                                                \"₹\",\n                                                formatCurrency(Math.abs(changeValue)).replace(\"₹\", \"\")\n                                            ]\n                                        }, void 0, true, {\n                                            fileName: \"/Users/nitish/Desktop/InvestWelth/Invest-frontend/app/components/PerformanceChart.tsx\",\n                                            lineNumber: 297,\n                                            columnNumber: 29\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                            className: changeValue >= 0 ? \"text-green-500\" : \"text-red-500\",\n                                            children: \"|\"\n                                        }, void 0, false, {\n                                            fileName: \"/Users/nitish/Desktop/InvestWelth/Invest-frontend/app/components/PerformanceChart.tsx\",\n                                            lineNumber: 300,\n                                            columnNumber: 29\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                            className: \"ml-1 \".concat(changeValue >= 0 ? \"text-green-500\" : \"text-red-500\"),\n                                            children: [\n                                                changeValue >= 0 ? \"+\" : \"\",\n                                                changePercent,\n                                                \"%\"\n                                            ]\n                                        }, void 0, true, {\n                                            fileName: \"/Users/nitish/Desktop/InvestWelth/Invest-frontend/app/components/PerformanceChart.tsx\",\n                                            lineNumber: 301,\n                                            columnNumber: 29\n                                        }, this)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"/Users/nitish/Desktop/InvestWelth/Invest-frontend/app/components/PerformanceChart.tsx\",\n                                    lineNumber: 296,\n                                    columnNumber: 25\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/nitish/Desktop/InvestWelth/Invest-frontend/app/components/PerformanceChart.tsx\",\n                            lineNumber: 294,\n                            columnNumber: 21\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/Users/nitish/Desktop/InvestWelth/Invest-frontend/app/components/PerformanceChart.tsx\",\n                    lineNumber: 292,\n                    columnNumber: 17\n                }, this)\n            }, void 0, false, {\n                fileName: \"/Users/nitish/Desktop/InvestWelth/Invest-frontend/app/components/PerformanceChart.tsx\",\n                lineNumber: 291,\n                columnNumber: 13\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"h-64 relative\",\n                children: [\n                    isLoading && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"flex items-center justify-center h-full\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-500\"\n                        }, void 0, false, {\n                            fileName: \"/Users/nitish/Desktop/InvestWelth/Invest-frontend/app/components/PerformanceChart.tsx\",\n                            lineNumber: 312,\n                            columnNumber: 25\n                        }, this)\n                    }, void 0, false, {\n                        fileName: \"/Users/nitish/Desktop/InvestWelth/Invest-frontend/app/components/PerformanceChart.tsx\",\n                        lineNumber: 311,\n                        columnNumber: 21\n                    }, this),\n                    error && !chartData && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"flex items-center justify-center h-full text-red-500\",\n                        children: error\n                    }, void 0, false, {\n                        fileName: \"/Users/nitish/Desktop/InvestWelth/Invest-frontend/app/components/PerformanceChart.tsx\",\n                        lineNumber: 317,\n                        columnNumber: 21\n                    }, this),\n                    !isLoading && chartData && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_chartjs_2__WEBPACK_IMPORTED_MODULE_3__.Line, {\n                        options: options,\n                        data: chartData\n                    }, void 0, false, {\n                        fileName: \"/Users/nitish/Desktop/InvestWelth/Invest-frontend/app/components/PerformanceChart.tsx\",\n                        lineNumber: 323,\n                        columnNumber: 21\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 bg-gray-700 text-white px-2 py-1 rounded text-xs\",\n                        children: \"28 Feb 2025\"\n                    }, void 0, false, {\n                        fileName: \"/Users/nitish/Desktop/InvestWelth/Invest-frontend/app/components/PerformanceChart.tsx\",\n                        lineNumber: 326,\n                        columnNumber: 17\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/nitish/Desktop/InvestWelth/Invest-frontend/app/components/PerformanceChart.tsx\",\n                lineNumber: 309,\n                columnNumber: 13\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"flex justify-center mt-4\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"flex space-x-2\",\n                    children: [\n                        \"1M\",\n                        \"3M\",\n                        \"6M\",\n                        \"1Y\",\n                        \"3Y\",\n                        \"MAX\"\n                    ].map((timeframe)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                            className: \"px-4 py-2 rounded-md text-sm \".concat(activeTimeframe === timeframe ? \"bg-blue-600 text-white\" : \"bg-gray-700 text-gray-300 hover:bg-gray-600\"),\n                            onClick: ()=>handleTimeframeChange(timeframe),\n                            children: timeframe\n                        }, timeframe, false, {\n                            fileName: \"/Users/nitish/Desktop/InvestWelth/Invest-frontend/app/components/PerformanceChart.tsx\",\n                            lineNumber: 334,\n                            columnNumber: 25\n                        }, this))\n                }, void 0, false, {\n                    fileName: \"/Users/nitish/Desktop/InvestWelth/Invest-frontend/app/components/PerformanceChart.tsx\",\n                    lineNumber: 332,\n                    columnNumber: 17\n                }, this)\n            }, void 0, false, {\n                fileName: \"/Users/nitish/Desktop/InvestWelth/Invest-frontend/app/components/PerformanceChart.tsx\",\n                lineNumber: 331,\n                columnNumber: 13\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/nitish/Desktop/InvestWelth/Invest-frontend/app/components/PerformanceChart.tsx\",\n        lineNumber: 290,\n        columnNumber: 9\n    }, this);\n}\n_s(PerformanceChart, \"ZOh0BDcVXZ06fou38nCbaEpLZvQ=\");\n_c = PerformanceChart;\nvar _c;\n$RefreshReg$(_c, \"PerformanceChart\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/components/PerformanceChart.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./utils/api.ts":
/*!**********************!*\
  !*** ./utils/api.ts ***!
  \**********************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fundAPI: function() { return /* binding */ fundAPI; },\n/* harmony export */   investmentAPI: function() { return /* binding */ investmentAPI; },\n/* harmony export */   portfolioAPI: function() { return /* binding */ portfolioAPI; },\n/* harmony export */   transactionAPI: function() { return /* binding */ transactionAPI; },\n/* harmony export */   userAPI: function() { return /* binding */ userAPI; }\n/* harmony export */ });\n// API base URL\nconst API_BASE_URL = \"http://localhost:5001/api\" || 0;\n// Generic fetch function with error handling\nasync function fetchFromAPI(endpoint) {\n    let options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n    try {\n        const url = \"\".concat(API_BASE_URL).concat(endpoint);\n        console.log(\"Fetching from: \".concat(url));\n        const response = await fetch(url, {\n            ...options,\n            headers: {\n                \"Content-Type\": \"application/json\",\n                ...options.headers\n            }\n        });\n        if (!response.ok) {\n            const errorText = await response.text();\n            let errorMessage;\n            try {\n                const errorData = JSON.parse(errorText);\n                errorMessage = errorData.error || \"API request failed\";\n            } catch (e) {\n                errorMessage = \"API request failed with status \".concat(response.status);\n            }\n            throw new Error(errorMessage);\n        }\n        return await response.json();\n    } catch (error) {\n        console.error(\"API request error:\", error);\n        throw error;\n    }\n}\n// User API\nconst userAPI = {\n    getProfile: ()=>fetchFromAPI(\"/users/profile\"),\n    getAll: ()=>fetchFromAPI(\"/users\")\n};\n// Investment API\nconst investmentAPI = {\n    getAll: ()=>fetchFromAPI(\"/investments\"),\n    getSummary: ()=>fetchFromAPI(\"/investments/summary\")\n};\n// Fund API\nconst fundAPI = {\n    getAll: ()=>fetchFromAPI(\"/funds\"),\n    getById: (id)=>fetchFromAPI(\"/funds/\".concat(id)),\n    getOverlap: (fund1, fund2)=>{\n        let endpoint = \"/funds/overlap\";\n        if (fund1 && fund2) {\n            endpoint += \"?fund1=\".concat(fund1, \"&fund2=\").concat(fund2);\n        }\n        return fetchFromAPI(endpoint);\n    },\n    getPerformance: function(id) {\n        let period = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : \"1M\", interval = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : \"daily\";\n        return fetchFromAPI(\"/funds/\".concat(id, \"/performance?period=\").concat(period, \"&interval=\").concat(interval));\n    },\n    getSectors: (id)=>fetchFromAPI(\"/funds/\".concat(id, \"/sectors\")),\n    getStocks: (id)=>fetchFromAPI(\"/funds/\".concat(id, \"/stocks\"))\n};\n// Portfolio API\nconst portfolioAPI = {\n    get: ()=>fetchFromAPI(\"/portfolio\"),\n    getSectorAllocation: ()=>fetchFromAPI(\"/portfolio/sectors\"),\n    getPerformance: function() {\n        let period = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : \"1M\", interval = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : \"daily\";\n        return fetchFromAPI(\"/portfolio/performance?period=\".concat(period, \"&interval=\").concat(interval));\n    },\n    getHealth: ()=>fetchFromAPI(\"/portfolio/health\")\n};\n// Transaction API\nconst transactionAPI = {\n    getAll: ()=>fetchFromAPI(\"/transactions\")\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3V0aWxzL2FwaS50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBLGVBQWU7QUFDZixNQUFNQSxlQUFlQywyQkFBK0IsSUFBSTtBQUV4RCw2Q0FBNkM7QUFDN0MsZUFBZUcsYUFBYUMsUUFBZ0I7UUFBRUMsVUFBQUEsaUVBQXVCLENBQUM7SUFDbEUsSUFBSTtRQUNBLE1BQU1DLE1BQU0sR0FBa0JGLE9BQWZMLGNBQXdCLE9BQVRLO1FBQzlCRyxRQUFRQyxHQUFHLENBQUMsa0JBQXNCLE9BQUpGO1FBRTlCLE1BQU1HLFdBQVcsTUFBTUMsTUFBTUosS0FBSztZQUM5QixHQUFHRCxPQUFPO1lBQ1ZNLFNBQVM7Z0JBQ0wsZ0JBQWdCO2dCQUNoQixHQUFHTixRQUFRTSxPQUFPO1lBQ3RCO1FBQ0o7UUFFQSxJQUFJLENBQUNGLFNBQVNHLEVBQUUsRUFBRTtZQUNkLE1BQU1DLFlBQVksTUFBTUosU0FBU0ssSUFBSTtZQUNyQyxJQUFJQztZQUNKLElBQUk7Z0JBQ0EsTUFBTUMsWUFBWUMsS0FBS0MsS0FBSyxDQUFDTDtnQkFDN0JFLGVBQWVDLFVBQVVHLEtBQUssSUFBSTtZQUN0QyxFQUFFLE9BQU9DLEdBQUc7Z0JBQ1JMLGVBQWUsa0NBQWtELE9BQWhCTixTQUFTWSxNQUFNO1lBQ3BFO1lBQ0EsTUFBTSxJQUFJQyxNQUFNUDtRQUNwQjtRQUVBLE9BQU8sTUFBTU4sU0FBU2MsSUFBSTtJQUM5QixFQUFFLE9BQU9KLE9BQU87UUFDWlosUUFBUVksS0FBSyxDQUFDLHNCQUFzQkE7UUFDcEMsTUFBTUE7SUFDVjtBQUNKO0FBRUEsV0FBVztBQUNKLE1BQU1LLFVBQVU7SUFDbkJDLFlBQVksSUFBTXRCLGFBQWE7SUFDL0J1QixRQUFRLElBQU12QixhQUFhO0FBQy9CLEVBQUU7QUFFRixpQkFBaUI7QUFDVixNQUFNd0IsZ0JBQWdCO0lBQ3pCRCxRQUFRLElBQU12QixhQUFhO0lBQzNCeUIsWUFBWSxJQUFNekIsYUFBYTtBQUNuQyxFQUFFO0FBRUYsV0FBVztBQUNKLE1BQU0wQixVQUFVO0lBQ25CSCxRQUFRLElBQU12QixhQUFhO0lBQzNCMkIsU0FBUyxDQUFDQyxLQUFlNUIsYUFBYSxVQUFhLE9BQUg0QjtJQUNoREMsWUFBWSxDQUFDQyxPQUFnQkM7UUFDekIsSUFBSTlCLFdBQVc7UUFDZixJQUFJNkIsU0FBU0MsT0FBTztZQUNoQjlCLFlBQVksVUFBeUI4QixPQUFmRCxPQUFNLFdBQWUsT0FBTkM7UUFDekM7UUFDQSxPQUFPL0IsYUFBYUM7SUFDeEI7SUFDQStCLGdCQUFnQixTQUFDSjtZQUFZSywwRUFBaUIsTUFBTUMsNEVBQW1CO2VBQ25FbEMsYUFBYSxVQUFtQ2lDLE9BQXpCTCxJQUFHLHdCQUF5Q00sT0FBbkJELFFBQU8sY0FBcUIsT0FBVEM7O0lBQ3ZFQyxZQUFZLENBQUNQLEtBQWU1QixhQUFhLFVBQWEsT0FBSDRCLElBQUc7SUFDdERRLFdBQVcsQ0FBQ1IsS0FBZTVCLGFBQWEsVUFBYSxPQUFINEIsSUFBRztBQUN6RCxFQUFFO0FBRUYsZ0JBQWdCO0FBQ1QsTUFBTVMsZUFBZTtJQUN4QkMsS0FBSyxJQUFNdEMsYUFBYTtJQUN4QnVDLHFCQUFxQixJQUFNdkMsYUFBYTtJQUN4Q2dDLGdCQUFnQjtZQUFDQywwRUFBaUIsTUFBTUMsNEVBQW1CO2VBQ3ZEbEMsYUFBYSxpQ0FBb0RrQyxPQUFuQkQsUUFBTyxjQUFxQixPQUFUQzs7SUFDckVNLFdBQVcsSUFBTXhDLGFBQWE7QUFDbEMsRUFBRTtBQUVGLGtCQUFrQjtBQUNYLE1BQU15QyxpQkFBaUI7SUFDMUJsQixRQUFRLElBQU12QixhQUFhO0FBQy9CLEVBQUUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vdXRpbHMvYXBpLnRzPzZlZDAiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQVBJIGJhc2UgVVJMXG5jb25zdCBBUElfQkFTRV9VUkwgPSBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19BUElfVVJMIHx8ICdodHRwOi8vbG9jYWxob3N0OjUwMDEvYXBpJztcblxuLy8gR2VuZXJpYyBmZXRjaCBmdW5jdGlvbiB3aXRoIGVycm9yIGhhbmRsaW5nXG5hc3luYyBmdW5jdGlvbiBmZXRjaEZyb21BUEkoZW5kcG9pbnQ6IHN0cmluZywgb3B0aW9uczogUmVxdWVzdEluaXQgPSB7fSkge1xuICAgIHRyeSB7XG4gICAgICAgIGNvbnN0IHVybCA9IGAke0FQSV9CQVNFX1VSTH0ke2VuZHBvaW50fWA7XG4gICAgICAgIGNvbnNvbGUubG9nKGBGZXRjaGluZyBmcm9tOiAke3VybH1gKTtcblxuICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKHVybCwge1xuICAgICAgICAgICAgLi4ub3B0aW9ucyxcbiAgICAgICAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLFxuICAgICAgICAgICAgICAgIC4uLm9wdGlvbnMuaGVhZGVycyxcbiAgICAgICAgICAgIH0sXG4gICAgICAgIH0pO1xuXG4gICAgICAgIGlmICghcmVzcG9uc2Uub2spIHtcbiAgICAgICAgICAgIGNvbnN0IGVycm9yVGV4dCA9IGF3YWl0IHJlc3BvbnNlLnRleHQoKTtcbiAgICAgICAgICAgIGxldCBlcnJvck1lc3NhZ2U7XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIGNvbnN0IGVycm9yRGF0YSA9IEpTT04ucGFyc2UoZXJyb3JUZXh0KTtcbiAgICAgICAgICAgICAgICBlcnJvck1lc3NhZ2UgPSBlcnJvckRhdGEuZXJyb3IgfHwgJ0FQSSByZXF1ZXN0IGZhaWxlZCc7XG4gICAgICAgICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgICAgICAgICAgZXJyb3JNZXNzYWdlID0gYEFQSSByZXF1ZXN0IGZhaWxlZCB3aXRoIHN0YXR1cyAke3Jlc3BvbnNlLnN0YXR1c31gO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGVycm9yTWVzc2FnZSk7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoJ0FQSSByZXF1ZXN0IGVycm9yOicsIGVycm9yKTtcbiAgICAgICAgdGhyb3cgZXJyb3I7XG4gICAgfVxufVxuXG4vLyBVc2VyIEFQSVxuZXhwb3J0IGNvbnN0IHVzZXJBUEkgPSB7XG4gICAgZ2V0UHJvZmlsZTogKCkgPT4gZmV0Y2hGcm9tQVBJKCcvdXNlcnMvcHJvZmlsZScpLFxuICAgIGdldEFsbDogKCkgPT4gZmV0Y2hGcm9tQVBJKCcvdXNlcnMnKSxcbn07XG5cbi8vIEludmVzdG1lbnQgQVBJXG5leHBvcnQgY29uc3QgaW52ZXN0bWVudEFQSSA9IHtcbiAgICBnZXRBbGw6ICgpID0+IGZldGNoRnJvbUFQSSgnL2ludmVzdG1lbnRzJyksXG4gICAgZ2V0U3VtbWFyeTogKCkgPT4gZmV0Y2hGcm9tQVBJKCcvaW52ZXN0bWVudHMvc3VtbWFyeScpLFxufTtcblxuLy8gRnVuZCBBUElcbmV4cG9ydCBjb25zdCBmdW5kQVBJID0ge1xuICAgIGdldEFsbDogKCkgPT4gZmV0Y2hGcm9tQVBJKCcvZnVuZHMnKSxcbiAgICBnZXRCeUlkOiAoaWQ6IG51bWJlcikgPT4gZmV0Y2hGcm9tQVBJKGAvZnVuZHMvJHtpZH1gKSxcbiAgICBnZXRPdmVybGFwOiAoZnVuZDE/OiBudW1iZXIsIGZ1bmQyPzogbnVtYmVyKSA9PiB7XG4gICAgICAgIGxldCBlbmRwb2ludCA9ICcvZnVuZHMvb3ZlcmxhcCc7XG4gICAgICAgIGlmIChmdW5kMSAmJiBmdW5kMikge1xuICAgICAgICAgICAgZW5kcG9pbnQgKz0gYD9mdW5kMT0ke2Z1bmQxfSZmdW5kMj0ke2Z1bmQyfWA7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGZldGNoRnJvbUFQSShlbmRwb2ludCk7XG4gICAgfSxcbiAgICBnZXRQZXJmb3JtYW5jZTogKGlkOiBudW1iZXIsIHBlcmlvZDogc3RyaW5nID0gJzFNJywgaW50ZXJ2YWw6IHN0cmluZyA9ICdkYWlseScpID0+XG4gICAgICAgIGZldGNoRnJvbUFQSShgL2Z1bmRzLyR7aWR9L3BlcmZvcm1hbmNlP3BlcmlvZD0ke3BlcmlvZH0maW50ZXJ2YWw9JHtpbnRlcnZhbH1gKSxcbiAgICBnZXRTZWN0b3JzOiAoaWQ6IG51bWJlcikgPT4gZmV0Y2hGcm9tQVBJKGAvZnVuZHMvJHtpZH0vc2VjdG9yc2ApLFxuICAgIGdldFN0b2NrczogKGlkOiBudW1iZXIpID0+IGZldGNoRnJvbUFQSShgL2Z1bmRzLyR7aWR9L3N0b2Nrc2ApLFxufTtcblxuLy8gUG9ydGZvbGlvIEFQSVxuZXhwb3J0IGNvbnN0IHBvcnRmb2xpb0FQSSA9IHtcbiAgICBnZXQ6ICgpID0+IGZldGNoRnJvbUFQSSgnL3BvcnRmb2xpbycpLFxuICAgIGdldFNlY3RvckFsbG9jYXRpb246ICgpID0+IGZldGNoRnJvbUFQSSgnL3BvcnRmb2xpby9zZWN0b3JzJyksXG4gICAgZ2V0UGVyZm9ybWFuY2U6IChwZXJpb2Q6IHN0cmluZyA9ICcxTScsIGludGVydmFsOiBzdHJpbmcgPSAnZGFpbHknKSA9PlxuICAgICAgICBmZXRjaEZyb21BUEkoYC9wb3J0Zm9saW8vcGVyZm9ybWFuY2U/cGVyaW9kPSR7cGVyaW9kfSZpbnRlcnZhbD0ke2ludGVydmFsfWApLFxuICAgIGdldEhlYWx0aDogKCkgPT4gZmV0Y2hGcm9tQVBJKCcvcG9ydGZvbGlvL2hlYWx0aCcpLFxufTtcblxuLy8gVHJhbnNhY3Rpb24gQVBJXG5leHBvcnQgY29uc3QgdHJhbnNhY3Rpb25BUEkgPSB7XG4gICAgZ2V0QWxsOiAoKSA9PiBmZXRjaEZyb21BUEkoJy90cmFuc2FjdGlvbnMnKSxcbn07ICJdLCJuYW1lcyI6WyJBUElfQkFTRV9VUkwiLCJwcm9jZXNzIiwiZW52IiwiTkVYVF9QVUJMSUNfQVBJX1VSTCIsImZldGNoRnJvbUFQSSIsImVuZHBvaW50Iiwib3B0aW9ucyIsInVybCIsImNvbnNvbGUiLCJsb2ciLCJyZXNwb25zZSIsImZldGNoIiwiaGVhZGVycyIsIm9rIiwiZXJyb3JUZXh0IiwidGV4dCIsImVycm9yTWVzc2FnZSIsImVycm9yRGF0YSIsIkpTT04iLCJwYXJzZSIsImVycm9yIiwiZSIsInN0YXR1cyIsIkVycm9yIiwianNvbiIsInVzZXJBUEkiLCJnZXRQcm9maWxlIiwiZ2V0QWxsIiwiaW52ZXN0bWVudEFQSSIsImdldFN1bW1hcnkiLCJmdW5kQVBJIiwiZ2V0QnlJZCIsImlkIiwiZ2V0T3ZlcmxhcCIsImZ1bmQxIiwiZnVuZDIiLCJnZXRQZXJmb3JtYW5jZSIsInBlcmlvZCIsImludGVydmFsIiwiZ2V0U2VjdG9ycyIsImdldFN0b2NrcyIsInBvcnRmb2xpb0FQSSIsImdldCIsImdldFNlY3RvckFsbG9jYXRpb24iLCJnZXRIZWFsdGgiLCJ0cmFuc2FjdGlvbkFQSSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./utils/api.ts\n"));

/***/ })

});