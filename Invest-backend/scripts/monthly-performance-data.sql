-- Monthly Performance Data for InvestWelth
-- This script adds historical performance data points for each month

-- Create a table for historical portfolio values if it doesn't exist
CREATE TABLE IF NOT EXISTS portfolio_history (
    history_id bigint primary key generated always as identity,
    user_id bigint REFERENCES users(user_id),
    value_date date NOT NULL,
    total_value numeric(14,2) NOT NULL,
    daily_change_percentage numeric(5,2),
    UNIQUE(user_id, value_date)
) WITH (OIDS=FALSE);

-- Create a table for historical fund values if it doesn't exist
CREATE TABLE IF NOT EXISTS fund_history (
    history_id bigint primary key generated always as identity,
    fund_id bigint REFERENCES mutual_funds(fund_id),
    value_date date NOT NULL,
    nav numeric(10,2) NOT NULL,
    daily_change_percentage numeric(5,2),
    UNIQUE(fund_id, value_date)
) WITH (OIDS=FALSE);

-- Insert historical portfolio values for John Doe (user_id = 1)
INSERT INTO portfolio_history (user_id, value_date, total_value, daily_change_percentage) VALUES
-- 2023 data
(1, '2023-01-31', 450000.00, 1.2),
(1, '2023-02-28', 455000.00, 1.1),
(1, '2023-03-31', 462000.00, 1.5),
(1, '2023-04-30', 458000.00, -0.9),
(1, '2023-05-31', 465000.00, 1.5),
(1, '2023-06-30', 470000.00, 1.1),
(1, '2023-07-31', 475000.00, 1.1),
(1, '2023-08-31', 480000.00, 1.1),
(1, '2023-09-30', 485000.00, 1.0),
(1, '2023-10-31', 490000.00, 1.0),
(1, '2023-11-30', 495000.00, 1.0),
(1, '2023-12-31', 500000.00, 1.0),
-- 2024 data
(1, '2024-01-31', 505000.00, 1.0),
(1, '2024-02-29', 510000.00, 1.0),
(1, '2024-03-31', 515000.00, 1.0),
(1, '2024-04-30', 520000.00, 1.0),
(1, '2024-05-31', 525000.00, 1.0),
(1, '2024-06-30', 530000.00, 1.0),
(1, '2024-07-31', 535000.00, 0.9),
(1, '2024-08-31', 540000.00, 0.9),
(1, '2024-09-30', 545000.00, 0.9),
(1, '2024-10-31', 550000.00, 0.9),
(1, '2024-11-30', 555000.00, 0.9),
(1, '2024-12-31', 560000.00, 0.9),
-- 2025 data (current year)
(1, '2025-01-31', 565000.00, 0.9),
(1, '2025-02-28', 570000.00, 0.9);

-- Insert historical portfolio values for Jane Smith (user_id = 2)
INSERT INTO portfolio_history (user_id, value_date, total_value, daily_change_percentage) VALUES
-- 2023 data
(2, '2023-01-31', 650000.00, 1.3),
(2, '2023-02-28', 660000.00, 1.5),
(2, '2023-03-31', 670000.00, 1.5),
(2, '2023-04-30', 665000.00, -0.7),
(2, '2023-05-31', 675000.00, 1.5),
(2, '2023-06-30', 685000.00, 1.5),
(2, '2023-07-31', 695000.00, 1.5),
(2, '2023-08-31', 705000.00, 1.4),
(2, '2023-09-30', 715000.00, 1.4),
(2, '2023-10-31', 725000.00, 1.4),
(2, '2023-11-30', 735000.00, 1.4),
(2, '2023-12-31', 745000.00, 1.4),
-- 2024 data
(2, '2024-01-31', 755000.00, 1.3),
(2, '2024-02-29', 765000.00, 1.3),
(2, '2024-03-31', 775000.00, 1.3),
(2, '2024-04-30', 785000.00, 1.3),
(2, '2024-05-31', 795000.00, 1.3),
(2, '2024-06-30', 805000.00, 1.3),
(2, '2024-07-31', 815000.00, 1.2),
(2, '2024-08-31', 825000.00, 1.2),
(2, '2024-09-30', 835000.00, 1.2),
(2, '2024-10-31', 845000.00, 1.2),
(2, '2024-11-30', 855000.00, 1.2),
(2, '2024-12-31', 865000.00, 1.2),
-- 2025 data (current year)
(2, '2025-01-31', 875000.00, 1.2),
(2, '2025-02-28', 885000.00, 1.1);

-- Insert historical portfolio values for Nitish Kumar (user_id = 3)
INSERT INTO portfolio_history (user_id, value_date, total_value, daily_change_percentage) VALUES
-- 2023 data
(3, '2023-01-31', 850000.00, 1.5),
(3, '2023-02-28', 865000.00, 1.8),
(3, '2023-03-31', 880000.00, 1.7),
(3, '2023-04-30', 875000.00, -0.6),
(3, '2023-05-31', 890000.00, 1.7),
(3, '2023-06-30', 905000.00, 1.7),
(3, '2023-07-31', 920000.00, 1.7),
(3, '2023-08-31', 935000.00, 1.6),
(3, '2023-09-30', 950000.00, 1.6),
(3, '2023-10-31', 965000.00, 1.6),
(3, '2023-11-30', 980000.00, 1.6),
(3, '2023-12-31', 995000.00, 1.5),
-- 2024 data
(3, '2024-01-31', 1010000.00, 1.5),
(3, '2024-02-29', 1025000.00, 1.5),
(3, '2024-03-31', 1040000.00, 1.5),
(3, '2024-04-30', 1055000.00, 1.4),
(3, '2024-05-31', 1070000.00, 1.4),
(3, '2024-06-30', 1085000.00, 1.4),
(3, '2024-07-31', 1100000.00, 1.4),
(3, '2024-08-31', 1115000.00, 1.4),
(3, '2024-09-30', 1130000.00, 1.3),
(3, '2024-10-31', 1145000.00, 1.3),
(3, '2024-11-30', 1160000.00, 1.3),
(3, '2024-12-31', 1175000.00, 1.3),
-- 2025 data (current year)
(3, '2025-01-31', 1190000.00, 1.3),
(3, '2025-02-28', 1215000.00, 2.1);

-- Insert historical NAV values for HDFC Top 100 Fund (fund_id = 1)
INSERT INTO fund_history (fund_id, value_date, nav, daily_change_percentage) VALUES
-- 2023 data
(1, '2023-01-31', 450.25, 1.1),
(1, '2023-02-28', 455.50, 1.2),
(1, '2023-03-31', 462.75, 1.6),
(1, '2023-04-30', 458.30, -1.0),
(1, '2023-05-31', 465.60, 1.6),
(1, '2023-06-30', 472.50, 1.5),
(1, '2023-07-31', 480.10, 1.6),
(1, '2023-08-31', 487.80, 1.6),
(1, '2023-09-30', 495.20, 1.5),
(1, '2023-10-31', 502.40, 1.5),
(1, '2023-11-30', 509.70, 1.5),
(1, '2023-12-31', 516.30, 1.3),
-- 2024 data
(1, '2024-01-31', 523.45, 1.4),
(1, '2024-02-29', 530.30, 1.3),
(1, '2024-03-31', 537.25, 1.3),
(1, '2024-04-30', 544.30, 1.3),
(1, '2024-05-31', 551.45, 1.3),
(1, '2024-06-30', 558.70, 1.3),
(1, '2024-07-31', 566.05, 1.3),
(1, '2024-08-31', 573.50, 1.3),
(1, '2024-09-30', 581.05, 1.3),
(1, '2024-10-31', 588.70, 1.3),
(1, '2024-11-30', 596.45, 1.3),
(1, '2024-12-31', 604.30, 1.3),
-- 2025 data (current year)
(1, '2025-01-31', 612.25, 1.3),
(1, '2025-02-28', 623.45, 1.8);

-- Insert historical NAV values for Axis Bluechip Fund (fund_id = 2)
INSERT INTO fund_history (fund_id, value_date, nav, daily_change_percentage) VALUES
-- 2023 data
(2, '2023-01-31', 350.25, 1.0),
(2, '2023-02-28', 354.50, 1.2),
(2, '2023-03-31', 359.75, 1.5),
(2, '2023-04-30', 356.30, -1.0),
(2, '2023-05-31', 361.60, 1.5),
(2, '2023-06-30', 367.50, 1.6),
(2, '2023-07-31', 373.10, 1.5),
(2, '2023-08-31', 378.80, 1.5),
(2, '2023-09-30', 384.20, 1.4),
(2, '2023-10-31', 389.40, 1.4),
(2, '2023-11-30', 394.70, 1.4),
(2, '2023-12-31', 399.30, 1.2),
-- 2024 data
(2, '2024-01-31', 404.45, 1.3),
(2, '2024-02-29', 409.30, 1.2),
(2, '2024-03-31', 414.25, 1.2),
(2, '2024-04-30', 419.30, 1.2),
(2, '2024-05-31', 424.45, 1.2),
(2, '2024-06-30', 429.70, 1.2),
(2, '2024-07-31', 435.05, 1.2),
(2, '2024-08-31', 440.50, 1.3),
(2, '2024-09-30', 446.05, 1.3),
(2, '2024-10-31', 451.70, 1.3),
(2, '2024-11-30', 457.45, 1.3),
(2, '2024-12-31', 463.30, 1.3),
-- 2025 data (current year)
(2, '2025-01-31', 469.25, 1.3),
(2, '2025-02-28', 475.45, 1.3);

-- Insert historical NAV values for SBI Small Cap Fund (fund_id = 3)
INSERT INTO fund_history (fund_id, value_date, nav, daily_change_percentage) VALUES
-- 2023 data
(3, '2023-01-31', 70.25, 1.5),
(3, '2023-02-28', 71.50, 1.8),
(3, '2023-03-31', 72.75, 1.7),
(3, '2023-04-30', 72.30, -0.6),
(3, '2023-05-31', 73.60, 1.8),
(3, '2023-06-30', 75.10, 2.0),
(3, '2023-07-31', 76.70, 2.1),
(3, '2023-08-31', 78.30, 2.1),
(3, '2023-09-30', 79.90, 2.0),
(3, '2023-10-31', 81.50, 2.0),
(3, '2023-11-30', 83.10, 2.0),
(3, '2023-12-31', 84.70, 1.9),
-- 2024 data
(3, '2024-01-31', 86.30, 1.9),
(3, '2024-02-29', 87.90, 1.9),
(3, '2024-03-31', 89.50, 1.8),
(3, '2024-04-30', 91.10, 1.8),
(3, '2024-05-31', 92.70, 1.8),
(3, '2024-06-30', 94.30, 1.7),
(3, '2024-07-31', 95.90, 1.7),
(3, '2024-08-31', 97.50, 1.7),
(3, '2024-09-30', 99.10, 1.6),
(3, '2024-10-31', 100.70, 1.6),
(3, '2024-11-30', 102.30, 1.6),
(3, '2024-12-31', 103.90, 1.6),
-- 2025 data (current year)
(3, '2025-01-31', 105.50, 1.5),
(3, '2025-02-28', 107.10, 1.5);

-- Insert historical NAV values for Mirae Asset Emerging Bluechip (fund_id = 4)
INSERT INTO fund_history (fund_id, value_date, nav, daily_change_percentage) VALUES
-- 2023 data
(4, '2023-01-31', 60.25, 1.3),
(4, '2023-02-28', 61.10, 1.4),
(4, '2023-03-31', 62.20, 1.8),
(4, '2023-04-30', 61.80, -0.6),
(4, '2023-05-31', 62.90, 1.8),
(4, '2023-06-30', 64.10, 1.9),
(4, '2023-07-31', 65.30, 1.9),
(4, '2023-08-31', 66.50, 1.8),
(4, '2023-09-30', 67.70, 1.8),
(4, '2023-10-31', 68.90, 1.8),
(4, '2023-11-30', 70.10, 1.7),
(4, '2023-12-31', 71.30, 1.7),
-- 2024 data
(4, '2024-01-31', 72.50, 1.7),
(4, '2024-02-29', 73.70, 1.7),
(4, '2024-03-31', 74.90, 1.6),
(4, '2024-04-30', 76.10, 1.6),
(4, '2024-05-31', 77.30, 1.6),
(4, '2024-06-30', 78.50, 1.6),
(4, '2024-07-31', 79.70, 1.5),
(4, '2024-08-31', 80.90, 1.5),
(4, '2024-09-30', 82.10, 1.5),
(4, '2024-10-31', 83.30, 1.5),
(4, '2024-11-30', 84.50, 1.4),
(4, '2024-12-31', 85.70, 1.4),
-- 2025 data (current year)
(4, '2025-01-31', 86.90, 1.4),
(4, '2025-02-28', 88.10, 1.4);

-- Insert historical NAV values for Parag Parikh Flexi Cap Fund (fund_id = 5)
INSERT INTO fund_history (fund_id, value_date, nav, daily_change_percentage) VALUES
-- 2023 data
(5, '2023-01-31', 35.25, 1.2),
(5, '2023-02-28', 35.70, 1.3),
(5, '2023-03-31', 36.20, 1.4),
(5, '2023-04-30', 36.00, -0.6),
(5, '2023-05-31', 36.50, 1.4),
(5, '2023-06-30', 37.10, 1.6),
(5, '2023-07-31', 37.70, 1.6),
(5, '2023-08-31', 38.30, 1.6),
(5, '2023-09-30', 38.90, 1.6),
(5, '2023-10-31', 39.50, 1.5),
(5, '2023-11-30', 40.10, 1.5),
(5, '2023-12-31', 40.70, 1.5),
-- 2024 data
(5, '2024-01-31', 41.30, 1.5),
(5, '2024-02-29', 41.90, 1.5),
(5, '2024-03-31', 42.50, 1.4),
(5, '2024-04-30', 43.10, 1.4),
(5, '2024-05-31', 43.70, 1.4),
(5, '2024-06-30', 44.30, 1.4),
(5, '2024-07-31', 44.90, 1.4),
(5, '2024-08-31', 45.50, 1.3),
(5, '2024-09-30', 46.10, 1.3),
(5, '2024-10-31', 46.70, 1.3),
(5, '2024-11-30', 47.30, 1.3),
(5, '2024-12-31', 47.90, 1.3),
-- 2025 data (current year)
(5, '2025-01-31', 48.50, 1.3),
(5, '2025-02-28', 49.10, 1.2);

-- Insert historical NAV values for ICICI Prudential Technology Fund (fund_id = 6)
INSERT INTO fund_history (fund_id, value_date, nav, daily_change_percentage) VALUES
-- 2023 data
(6, '2023-01-31', 90.25, 1.6),
(6, '2023-02-28', 91.80, 1.7),
(6, '2023-03-31', 93.40, 1.7),
(6, '2023-04-30', 92.90, -0.5),
(6, '2023-05-31', 94.50, 1.7),
(6, '2023-06-30', 96.20, 1.8),
(6, '2023-07-31', 97.90, 1.8),
(6, '2023-08-31', 99.60, 1.7),
(6, '2023-09-30', 101.30, 1.7),
(6, '2023-10-31', 103.00, 1.7),
(6, '2023-11-30', 104.70, 1.7),
(6, '2023-12-31', 106.40, 1.6),
-- 2024 data
(6, '2024-01-31', 108.10, 1.6),
(6, '2024-02-29', 109.80, 1.6),
(6, '2024-03-31', 111.50, 1.5),
(6, '2024-04-30', 113.20, 1.5),
(6, '2024-05-31', 114.90, 1.5),
(6, '2024-06-30', 116.60, 1.5),
(6, '2024-07-31', 118.30, 1.5),
(6, '2024-08-31', 120.00, 1.4),
(6, '2024-09-30', 121.70, 1.4),
(6, '2024-10-31', 123.40, 1.4),
(6, '2024-11-30', 125.10, 1.4),
(6, '2024-12-31', 126.80, 1.4),
-- 2025 data (current year)
(6, '2025-01-31', 128.50, 1.3),
(6, '2025-02-28', 130.20, 1.3);

-- Create a table for daily portfolio values if it doesn't exist
CREATE TABLE IF NOT EXISTS portfolio_daily (
    history_id bigint primary key generated always as identity,
    user_id bigint REFERENCES users(user_id),
    value_date date NOT NULL,
    total_value numeric(14,2) NOT NULL,
    daily_change_percentage numeric(5,2),
    UNIQUE(user_id, value_date)
) WITH (OIDS=FALSE);

-- Insert daily portfolio values for Nitish Kumar (user_id = 3) for February 2025
INSERT INTO portfolio_daily (user_id, value_date, total_value, daily_change_percentage) VALUES
(3, '2025-02-01', 1190500.00, 0.04),
(3, '2025-02-02', 1191200.00, 0.06),
(3, '2025-02-03', 1192300.00, 0.09),
(3, '2025-02-04', 1193800.00, 0.13),
(3, '2025-02-05', 1195700.00, 0.16),
(3, '2025-02-06', 1197900.00, 0.18),
(3, '2025-02-07', 1200400.00, 0.21),
(3, '2025-02-08', 1202500.00, 0.17),
(3, '2025-02-09', 1204100.00, 0.13),
(3, '2025-02-10', 1205200.00, 0.09),
(3, '2025-02-11', 1205800.00, 0.05),
(3, '2025-02-12', 1206000.00, 0.02),
(3, '2025-02-13', 1205700.00, -0.02),
(3, '2025-02-14', 1205100.00, -0.05),
(3, '2025-02-15', 1204200.00, -0.07),
(3, '2025-02-16', 1203000.00, -0.10),
(3, '2025-02-17', 1201500.00, -0.12),
(3, '2025-02-18', 1199800.00, -0.14),
(3, '2025-02-19', 1198000.00, -0.15),
(3, '2025-02-20', 1196100.00, -0.16),
(3, '2025-02-21', 1194200.00, -0.16),
(3, '2025-02-22', 1192500.00, -0.14),
(3, '2025-02-23', 1191000.00, -0.13),
(3, '2025-02-24', 1189800.00, -0.10),
(3, '2025-02-25', 1189000.00, -0.07),
(3, '2025-02-26', 1188700.00, -0.03),
(3, '2025-02-27', 1189000.00, 0.03),
(3, '2025-02-28', 1215000.00, 2.19);

-- Create a view for performance summary
CREATE OR REPLACE VIEW user_performance_summary AS
SELECT 
    u.user_id,
    u.username,
    COALESCE(latest.total_value, 0) AS current_value,
    COALESCE(latest.total_value - previous.total_value, 0) AS absolute_change,
    CASE 
        WHEN previous.total_value > 0 THEN 
            ROUND((latest.total_value - previous.total_value) / previous.total_value * 100, 2)
        ELSE 0
    END AS percentage_change
FROM 
    users u
LEFT JOIN (
    SELECT 
        user_id, 
        total_value
    FROM 
        portfolio_history
    WHERE 
        (user_id, value_date) IN (
            SELECT 
                user_id, 
                MAX(value_date) 
            FROM 
                portfolio_history 
            GROUP BY 
                user_id
        )
) latest ON u.user_id = latest.user_id
LEFT JOIN (
    SELECT 
        ph1.user_id, 
        ph1.total_value
    FROM 
        portfolio_history ph1
    JOIN (
        SELECT 
            user_id, 
            MAX(value_date) AS max_date
        FROM 
            portfolio_history
        GROUP BY 
            user_id
    ) ph2 ON ph1.user_id = ph2.user_id
    JOIN (
        SELECT 
            user_id, 
            MAX(value_date) AS prev_max_date
        FROM 
            portfolio_history
        WHERE 
            value_date < (
                SELECT 
                    MAX(value_date) 
                FROM 
                    portfolio_history ph3 
                WHERE 
                    ph3.user_id = portfolio_history.user_id
            )
        GROUP BY 
            user_id
    ) ph3 ON ph1.user_id = ph3.user_id AND ph1.value_date = ph3.prev_max_date
) previous ON u.user_id = previous.user_id; 